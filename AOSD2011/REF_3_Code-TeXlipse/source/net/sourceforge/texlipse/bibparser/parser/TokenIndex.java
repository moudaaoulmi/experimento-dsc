/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sourceforge.texlipse.bibparser.parser;

import net.sourceforge.texlipse.bibparser.analysis.AnalysisAdapter;
import net.sourceforge.texlipse.bibparser.node.EOF;
import net.sourceforge.texlipse.bibparser.node.TBString;
import net.sourceforge.texlipse.bibparser.node.TComma;
import net.sourceforge.texlipse.bibparser.node.TEntryName;
import net.sourceforge.texlipse.bibparser.node.TEquals;
import net.sourceforge.texlipse.bibparser.node.TEstring;
import net.sourceforge.texlipse.bibparser.node.TIdentifier;
import net.sourceforge.texlipse.bibparser.node.TLBrace;
import net.sourceforge.texlipse.bibparser.node.TLParen;
import net.sourceforge.texlipse.bibparser.node.TNumber;
import net.sourceforge.texlipse.bibparser.node.TPreamble;
import net.sourceforge.texlipse.bibparser.node.TQuotec;
import net.sourceforge.texlipse.bibparser.node.TRBrace;
import net.sourceforge.texlipse.bibparser.node.TRParen;
import net.sourceforge.texlipse.bibparser.node.TScribeComment;
import net.sourceforge.texlipse.bibparser.node.TSharp;
import net.sourceforge.texlipse.bibparser.node.TStringLiteral;
import net.sourceforge.texlipse.bibparser.node.TTaskcomment;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTTaskcomment(TTaskcomment node)
    {
        index = 0;
    }

    public void caseTEstring(TEstring node)
    {
        index = 1;
    }

    public void caseTScribeComment(TScribeComment node)
    {
        index = 2;
    }

    public void caseTPreamble(TPreamble node)
    {
        index = 3;
    }

    public void caseTEntryName(TEntryName node)
    {
        index = 4;
    }

    public void caseTLBrace(TLBrace node)
    {
        index = 5;
    }

    public void caseTRBrace(TRBrace node)
    {
        index = 6;
    }

    public void caseTBString(TBString node)
    {
        index = 7;
    }

    public void caseTLParen(TLParen node)
    {
        index = 8;
    }

    public void caseTRParen(TRParen node)
    {
        index = 9;
    }

    public void caseTComma(TComma node)
    {
        index = 10;
    }

    public void caseTEquals(TEquals node)
    {
        index = 11;
    }

    public void caseTSharp(TSharp node)
    {
        index = 12;
    }

    public void caseTNumber(TNumber node)
    {
        index = 13;
    }

    public void caseTIdentifier(TIdentifier node)
    {
        index = 14;
    }

    public void caseTQuotec(TQuotec node)
    {
        index = 15;
    }

    public void caseTStringLiteral(TStringLiteral node)
    {
        index = 16;
    }

    public void caseEOF(EOF node)
    {
        index = 17;
    }
}
