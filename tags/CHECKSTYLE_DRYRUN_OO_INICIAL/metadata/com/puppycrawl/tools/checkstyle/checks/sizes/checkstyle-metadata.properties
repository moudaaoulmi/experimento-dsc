Sizes.group = Size Violations

AnonInnerLength.desc = Checks for long anonymous inner classes.<br/>\r\nRationale: If an anonymous inner class becomes very long it is hard to understand and to see the flow of the method where the class is defined. Therefore long anonymous inner classes should usually be refactored into a named inner class. See also Bloch, Effective Java, p. 93. 
AnonInnerLength.max  = maximum allowable number of lines.
AnonInnerLength.name = Anonymous inner classes lengths

ExecutableStatementCount.desc   = Restricts the number of executable statements to a specified limit
ExecutableStatementCount.max    = Maximum allowed parameters.
ExecutableStatementCount.name   = Executable Statement Size
ExecutableStatementCount.tokens = Tokens to check.

FileLength.desc = Checks for long source files.<br/>\r\nRationale: If a source file becomes very long it is hard to understand. Therefore long classes should usually be refactored into several individual classes that focus on a specific task. 
FileLength.max  = Maximum number of lines allowed.
FileLength.name = Maximum File Length

LineLength.desc          = Checks for long lines.<br/>\r\nRationale: Long lines are hard to read in printouts or if developers have limited screen space for the source code, e.g. if the IDE displays additional information like project tree, class hierarchy, etc. 
LineLength.ignorePattern = Pattern for lines to ignore.
LineLength.max           = Maximum allowed line length.
LineLength.name          = Maximum Line Length
LineLength.tabWidth      = Number of characters to count for each tab character.

MethodLength.countEmpty = whether to count empty lines and single line comments of the form //
MethodLength.desc       = Checks for long methods and constructors.<br/>\r\nRationale: If a method becomes very long it is hard to understand. Therefore long methods should usually be refactored into several individual methods that focus on a specific task. 
MethodLength.max        = Maximum number of lines allowed.
MethodLength.name       = Maximum Method Length
MethodLength.tokens     = Tokens to check.

ParameterNumber.desc   = Checks the number of parameters of a method or constructor.
ParameterNumber.max    = Maximum allowed parameters.
ParameterNumber.name   = Maximum Parameters
ParameterNumber.tokens = Tokens to check.
