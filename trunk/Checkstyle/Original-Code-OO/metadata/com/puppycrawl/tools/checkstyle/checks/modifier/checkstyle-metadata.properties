Modifiers.group = Modifiers

ModifierOrder.desc = Checks that the order of modifiers conforms to the suggestions in the Java Language specification, sections 8.1.1, 8.3.1 and 8.4.3. The correct order is:\r\n<ol>\r\n<li>public</li>\r\n<li> protected</li>\r\n<li>private</li>\r\n<li>abstract</li>\r\n<li>static</li>\r\n<li>final</li>\r\n<li>transient</li>\r\n<li>volatile</li>\r\n<li>synchronized</li>\r\n<li>native</li>\r\n<li>strictfp</li>\r\n</ol>\r\n
ModifierOrder.name = Modifier Order

RedundantModifier.desc   = Checks for redundant modifiers in interface and annotation definitions. Also checks for redundant final modifiers on methods of final classes.<br/>\r\nRationale: The Java Language Specification strongly discourages the usage of "public" and "abstract" for method declarations in interface definitions as a matter of style.<br/>\r\nVariables in interfaces and annotations are automatically public, static and final, so these modifiers are redundant as well.<br/>\r\nAs annotations are a form of interface, their fields are also automatically public, static and final just as their annotation fields are automatically public and abstract.<br/>\r\nFinal classes by definition can not be extended so the final modifier on the method of a final class is redundant.<br/>
RedundantModifier.name   = Redundant Modifier
RedundantModifier.tokens = Tokens to check.
